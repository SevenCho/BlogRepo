//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GPUImageTwoPassTextureSamplingFilter.h"

@interface GPUImageGaussianBlurFilter : GPUImageTwoPassTextureSamplingFilter
{
    BOOL shouldResizeBlurRadiusWithImageSize;
    float _blurRadiusInPixels;
    float _texelSpacingMultiplier;
    float _blurRadiusAsFractionOfImageWidth;
    float _blurRadiusAsFractionOfImageHeight;
    unsigned int _blurPasses;
}

+ (id)fragmentShaderForOptimizedBlurOfRadius:(unsigned int)arg1 sigma:(float)arg2;
+ (id)vertexShaderForOptimizedBlurOfRadius:(unsigned int)arg1 sigma:(float)arg2;
+ (id)fragmentShaderForStandardBlurOfRadius:(unsigned int)arg1 sigma:(float)arg2;
+ (id)vertexShaderForStandardBlurOfRadius:(unsigned int)arg1 sigma:(float)arg2;
@property(nonatomic) unsigned int blurPasses; // @synthesize blurPasses=_blurPasses;
@property(nonatomic) float blurRadiusAsFractionOfImageHeight; // @synthesize blurRadiusAsFractionOfImageHeight=_blurRadiusAsFractionOfImageHeight;
@property(nonatomic) float blurRadiusAsFractionOfImageWidth; // @synthesize blurRadiusAsFractionOfImageWidth=_blurRadiusAsFractionOfImageWidth;
@property(nonatomic) float blurRadiusInPixels; // @synthesize blurRadiusInPixels=_blurRadiusInPixels;
@property(nonatomic) float texelSpacingMultiplier; // @synthesize texelSpacingMultiplier=_texelSpacingMultiplier;
- (void)switchToVertexShader:(id)arg1 fragmentShader:(id)arg2;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)setupFilterForSize:(struct CGSize)arg1;
- (id)init;
- (id)initWithFirstStageVertexShaderFromString:(id)arg1 firstStageFragmentShaderFromString:(id)arg2 secondStageVertexShaderFromString:(id)arg3 secondStageFragmentShaderFromString:(id)arg4;

@end

