//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class FTSMessageDB, NSMutableArray, NSMutableDictionary, NSString, SearchMatchTip;

@interface FTSMsgSearchTask : NSObject
{
    NSMutableDictionary *_dicUnIndexMemCache;
    FTSMessageDB *_ftsMessageDB;
    NSMutableArray *_arrResultWrap;
    BOOL _isProtentialTalkerSearch;
    BOOL _isTaskFinish;
    BOOL _hasSearchDone;
    BOOL _hasMoreData;
    BOOL _isCancelled;
    BOOL _isRunning;
    BOOL _hasIndexMsgResult;
    BOOL _hasMemMsgResult;
    BOOL _isSessionRestrictFirst;
    id <FTSMsgSearchTaskDelegate> _delegate;
    int _taskType;
    int _resultType;
    NSString *_newestQueryText;
    NSString *_lastQueryText;
    NSMutableArray *_arrLastQueryTerm;
    NSString *_parsedTalkerFromQuery;
    NSString *_parsedQueryFromQuery;
    NSString *_restrictSessionUsrname;
    NSString *_restrictTalkerUsrname;
    NSString *_restrictTalkerSearchText;
    NSString *_restrictContextRealSearchText;
    SearchMatchTip *_restrictTalkerMatchTip;
}

@property(retain, nonatomic) SearchMatchTip *restrictTalkerMatchTip; // @synthesize restrictTalkerMatchTip=_restrictTalkerMatchTip;
@property(retain, nonatomic) NSString *restrictContextRealSearchText; // @synthesize restrictContextRealSearchText=_restrictContextRealSearchText;
@property(retain, nonatomic) NSString *restrictTalkerSearchText; // @synthesize restrictTalkerSearchText=_restrictTalkerSearchText;
@property(retain, nonatomic) NSString *restrictTalkerUsrname; // @synthesize restrictTalkerUsrname=_restrictTalkerUsrname;
@property(retain, nonatomic) NSString *restrictSessionUsrname; // @synthesize restrictSessionUsrname=_restrictSessionUsrname;
@property(nonatomic) BOOL isSessionRestrictFirst; // @synthesize isSessionRestrictFirst=_isSessionRestrictFirst;
@property(readonly, nonatomic) NSString *parsedQueryFromQuery; // @synthesize parsedQueryFromQuery=_parsedQueryFromQuery;
@property(readonly, nonatomic) NSString *parsedTalkerFromQuery; // @synthesize parsedTalkerFromQuery=_parsedTalkerFromQuery;
@property(readonly, nonatomic) BOOL hasMemMsgResult; // @synthesize hasMemMsgResult=_hasMemMsgResult;
@property(readonly, nonatomic) BOOL hasIndexMsgResult; // @synthesize hasIndexMsgResult=_hasIndexMsgResult;
@property(readonly, nonatomic) BOOL isRunning; // @synthesize isRunning=_isRunning;
@property(readonly, nonatomic) BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly, nonatomic) BOOL hasMoreData; // @synthesize hasMoreData=_hasMoreData;
@property(readonly, nonatomic) BOOL hasSearchDone; // @synthesize hasSearchDone=_hasSearchDone;
@property(readonly, nonatomic) NSMutableArray *arrLastQueryTerm; // @synthesize arrLastQueryTerm=_arrLastQueryTerm;
@property(retain, nonatomic) NSString *lastQueryText; // @synthesize lastQueryText=_lastQueryText;
@property(retain, nonatomic) NSString *newestQueryText; // @synthesize newestQueryText=_newestQueryText;
@property(readonly, nonatomic) int resultType; // @synthesize resultType=_resultType;
@property(nonatomic) int taskType; // @synthesize taskType=_taskType;
@property(nonatomic) __weak id <FTSMsgSearchTaskDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)memSearch:(id)arg1 realSearchText:(id)arg2 limitUsrname:(id)arg3 limit:(unsigned long)arg4 searchAll:(char *)arg5;
- (unsigned long)calAllMemMsgCount;
- (id)classifyMsgItems:(id)arg1;
- (id)filterMsgItemsOrderly:(id)arg1;
- (void)resetSearchResult;
- (void)resetSearch;
- (void)endSearch:(id)arg1;
- (void)prepareSearch;
- (id)getMatchedExistResultWrapAs:(id)arg1;
- (void)appendResult:(id)arg1;
- (void)internalSearch:(id)arg1 searchBarText:(id)arg2 taskInfo:(id)arg3;
- (void)asynSearch:(id)arg1 fastResult:(BOOL)arg2 appendMode:(BOOL)arg3;
- (void)asynSearch:(id)arg1 fastResult:(BOOL)arg2;
- (void)asynSearch:(id)arg1 appendMode:(BOOL)arg2;
- (BOOL)checkValid:(id)arg1;
- (int)convertPageType;
- (BOOL)isNotSupportAppendMode;
@property(readonly, nonatomic, getter=isProtentialTalkerSearch) BOOL isProtentialTalkerSearch;
- (BOOL)isInChatRoomSessionRestrictSearch;
- (BOOL)isInTalkerRestrictSearch;
- (BOOL)isInSessionRestrictSearch;
- (BOOL)isInRestrictSearch;
- (void)setResultFromTask:(id)arg1 searchText:(id)arg2;
- (BOOL)compareTrimText:(id)arg1 to:(id)arg2;
- (void)setMsgMemeroyCache:(id)arg1;
- (id)getArrSearchResultWrap;
- (id)getSessionMsgItemsForindex:(unsigned int)arg1;
- (id)getSessionDic;
- (id)getMsgItem;
- (id)getSearchResult;
- (void)cancel;
- (void)initData;
- (id)initWithDB:(id)arg1;

@end

