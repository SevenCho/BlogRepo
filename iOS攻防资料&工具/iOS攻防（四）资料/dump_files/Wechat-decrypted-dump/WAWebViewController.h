//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "IUiUtilExt.h"
#import "MMTipsViewControllerDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIScrollViewDelegate.h"
#import "WAAppActionSheetDelegate.h"
#import "WAContactMgrExtension.h"
#import "WAPopInteractiveTransitionDelegate.h"
#import "WAWebViewJSLogicDelegate.h"
#import "WCActionSheetDelegate.h"
#import "YYWebViewDelegate.h"

@class ForwardMessageLogicController, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, NSURLRequest, UIImageView, UILongPressGestureRecognizer, UIScreenEdgePanGestureRecognizer, UIView, UIView<YYWebViewInterface>, WAAppActionSheet, WABaseInfoToast, WACacheVersionChecker, WAHTMLWebViewController, WAMenuPopInteractiveTransition, WANavLoadingLayer, WAWebViewJSLogicImpl, WAWebViewMenuNavBarProperties, WAWebViewMutiFuncMenuView, WAWebViewPluginScheduler;

@interface WAWebViewController : MMUIViewController <WAAppActionSheetDelegate, MMTipsViewControllerDelegate, WCActionSheetDelegate, WAPopInteractiveTransitionDelegate, UIGestureRecognizerDelegate, IUiUtilExt, WAContactMgrExtension, WAWebViewJSLogicDelegate, UIScrollViewDelegate, YYWebViewDelegate>
{
    BOOL _bIsStatusBarBlack;
    UIView<YYWebViewInterface> *webView;
    NSString *m_initUrl;
    WAWebViewJSLogicImpl *m_jsLogicImpl;
    NSMutableDictionary *m_jsInitInfo;
    NSString *m_preloadBaseURL;
    NSString *m_preloadPageRelativeURL;
    NSString *m_preloadPageQuery;
    NSString *m_preloadFrameURL;
    NSString *m_preloadIndexURL;
    BOOL m_isPreloadFrameLoaded;
    BOOL m_isPreloadIndexLoaded;
    NSDictionary *m_dicPageAttribute;
    BOOL m_isPreloadLoadTabAttribute;
    BOOL m_isPreloadSetTabBarAttribute;
    NSDictionary *m_dicTabBarAttribute;
    BOOL m_isViewWillAppearAlready;
    BOOL m_isViewDidAppear;
    BOOL m_isSetPreloadViewAttribute;
    BOOL m_isFinishLoaded;
    NSString *m_nsCurrentUrl;
    BOOL m_isGetTabInfoFinished;
    NSDictionary *m_dicURL2TabInfo;
    NSMutableSet *m_setRequestTabInfoResourceURL;
    NSMutableDictionary *m_dicTabIndex2TabInfo;
    WAWebViewMutiFuncMenuView *_menuView;
    WAWebViewMenuNavBarProperties *_navBarProperties;
    UIView *_tailBgView;
    BOOL _bIsDraggingScroll;
    float _fLastStartOffsetY;
    BOOL _bFullScreen;
    BOOL _bHideStatusBar;
    int _eContentMode;
    BOOL m_bDisableSwipeBack;
    UIScreenEdgePanGestureRecognizer *_popBackInteractivePopGesture;
    WAMenuPopInteractiveTransition *_popBackInteractiveTransition;
    UIView *_webInfoTopView;
    WABaseInfoToast *_webViewToast;
    WANavLoadingLayer *_webLoadingLayer;
    ForwardMessageLogicController *m_forwardLogic;
    WAAppActionSheet *_actionSheet;
    long long _loadPageFrameStartTime;
    long long _loadPageIndexStartTime;
    BOOL m_bWebviewReceiveTerminateSignal;
    BOOL m_bWebviewReceiveTerminateSignalManually;
    WACacheVersionChecker *_moduleCacheVersionChecker;
    BOOL _isModuleDataLoaded;
    BOOL _isLoadingModuleData;
    NSString *_strOfPreloadTaskPageFrameJS;
    UILongPressGestureRecognizer *m_longPressGestureRecognizer;
    BOOL m_bIFrame;
    int m_loadingCount;
    BOOL m_bShouldForcedRotationToPortrait;
    BOOL m_bIsBeingPopedFromNewMainFrame;
    NSDictionary *_cacheRouteInfo;
    int _orientation;
    BOOL m_bWebViewTerminatedManually;
    BOOL _bHasSupplyAppInfo;
    UIImageView *_shadowView;
    BOOL m_isLanscape;
    BOOL m_isTopTabBar;
    BOOL m_bNeedOnAppRouteReload;
    BOOL m_bIsInsertCamera;
    BOOL m_bIsInsertLivePusher;
    BOOL m_bIsFromPreloadTaskWithNotAppInfo;
    BOOL _m_bIsDelayPushWebView;
    unsigned long m_uiWebviewID;
    id <WAWebViewDelegate> m_delegate;
    NSMutableDictionary *m_extraInfo;
    float m_fTabBarHeight;
    int _enmPullRefreshMode;
    WAWebViewPluginScheduler *_pluginScheduler;
    CDUnknownBlockType _m_onLoadInitReady;
    CDUnknownBlockType _m_onLoadViewDidAppear;
    CDUnknownBlockType _m_onViewDidAppearThenCreateTab;
    unsigned long _tagNativeMax;
    NSMutableDictionary *_nativeViews;
    NSMutableDictionary *_containerViews;
    WAHTMLWebViewController *_htmlWebVC;
    unsigned long _appServiceType;
}

+ (void)setNavigationRightButton:(id)arg1 webView:(id)arg2;
+ (void)setNavigationAttribute:(id)arg1 webView:(id)arg2;
+ (id)pagePathFromURL:(id)arg1;
@property(nonatomic) unsigned long appServiceType; // @synthesize appServiceType=_appServiceType;
@property(retain, nonatomic) WAHTMLWebViewController *htmlWebVC; // @synthesize htmlWebVC=_htmlWebVC;
@property(retain, nonatomic) NSMutableDictionary *containerViews; // @synthesize containerViews=_containerViews;
@property(retain, nonatomic) NSMutableDictionary *nativeViews; // @synthesize nativeViews=_nativeViews;
@property(nonatomic) unsigned long tagNativeMax; // @synthesize tagNativeMax=_tagNativeMax;
@property(copy, nonatomic) CDUnknownBlockType m_onViewDidAppearThenCreateTab; // @synthesize m_onViewDidAppearThenCreateTab=_m_onViewDidAppearThenCreateTab;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadViewDidAppear; // @synthesize m_onLoadViewDidAppear=_m_onLoadViewDidAppear;
@property(copy, nonatomic) CDUnknownBlockType m_onLoadInitReady; // @synthesize m_onLoadInitReady=_m_onLoadInitReady;
@property(nonatomic) BOOL m_bIsDelayPushWebView; // @synthesize m_bIsDelayPushWebView=_m_bIsDelayPushWebView;
@property(retain, nonatomic) WAWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(nonatomic) int enmPullRefreshMode; // @synthesize enmPullRefreshMode=_enmPullRefreshMode;
@property(nonatomic) BOOL m_bIsFromPreloadTaskWithNotAppInfo; // @synthesize m_bIsFromPreloadTaskWithNotAppInfo;
@property(nonatomic) BOOL m_bIsInsertLivePusher; // @synthesize m_bIsInsertLivePusher;
@property(nonatomic) BOOL m_bIsInsertCamera; // @synthesize m_bIsInsertCamera;
@property(nonatomic) BOOL m_bNeedOnAppRouteReload; // @synthesize m_bNeedOnAppRouteReload;
@property(readonly, nonatomic) BOOL m_bWebviewReceiveTerminateSignalManually; // @synthesize m_bWebviewReceiveTerminateSignalManually;
@property(readonly, nonatomic) BOOL m_bWebviewReceiveTerminateSignal; // @synthesize m_bWebviewReceiveTerminateSignal;
@property(retain, nonatomic) WAWebViewMenuNavBarProperties *m_navBarProperties; // @synthesize m_navBarProperties=_navBarProperties;
@property(retain, nonatomic) WAWebViewMutiFuncMenuView *m_menuView; // @synthesize m_menuView=_menuView;
@property(nonatomic) float m_fTabBarHeight; // @synthesize m_fTabBarHeight;
@property(nonatomic) BOOL m_isTopTabBar; // @synthesize m_isTopTabBar;
@property(readonly, nonatomic) NSString *m_initUrl; // @synthesize m_initUrl;
@property(retain, nonatomic) NSMutableDictionary *m_extraInfo; // @synthesize m_extraInfo;
@property(nonatomic) BOOL m_isLanscape; // @synthesize m_isLanscape;
@property(readonly, nonatomic) BOOL m_isFinishLoaded; // @synthesize m_isFinishLoaded;
@property(readonly, nonatomic) WAWebViewJSLogicImpl *m_jsLogicImpl; // @synthesize m_jsLogicImpl;
@property(nonatomic) __weak id <WAWebViewDelegate> m_delegate; // @synthesize m_delegate;
@property(readonly, nonatomic) unsigned long m_uiWebviewID; // @synthesize m_uiWebviewID;
@property(retain, nonatomic) UIView<YYWebViewInterface> *webView; // @synthesize webView;
@property(nonatomic) BOOL m_bIsStatusBarBlack; // @synthesize m_bIsStatusBarBlack=_bIsStatusBarBlack;
- (void).cxx_destruct;
- (void)setRecordSubTitleIfNeed;
- (id)tagForCurrentPage;
- (id)popWebViewCountFromSelf:(long)arg1;
- (void)enableGestureBack:(BOOL)arg1;
- (id)getLeftBarButton;
- (unsigned long)getViewId:(id)arg1;
- (id)getChildViews;
- (BOOL)removeChildView:(unsigned long)arg1;
- (id)getChildView:(unsigned long)arg1;
- (unsigned long)insertChildView:(id)arg1 viewId:(unsigned long)arg2 parentId:(unsigned long)arg3;
- (void)bringNativeToFront:(id)arg1;
- (id)getPluginScheduler;
- (id)getWxaExternalInfo;
- (void)remoteDomEvent:(id)arg1 webViewID:(unsigned long)arg2;
- (BOOL)isPreloadWebView;
- (BOOL)isIgnoreRemoteCheckDomain;
- (BOOL)isOpenDebugAndVConsole;
- (unsigned long)getDebugModeType;
- (unsigned long long)getAppVersion;
- (void)checkUserAuthWithJSAPI:(id)arg1 handler:(CDUnknownBlockType)arg2 failHandler:(CDUnknownBlockType)arg3;
- (BOOL)checkRunModeOnWebview:(id)arg1;
- (id)getPermissionResultWithJSAPI:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (id)webviewController;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (unsigned int)supportedInterfaceOrientations;
- (void)startForcedRotation:(int)arg1;
- (void)webviewDidReceiveScriptMessage:(id)arg1 handler:(id)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removeAllNativeViewsAndNotifyPlugin;
- (void)webViewContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)finishLoadAction;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)showPublicJSSpendTime;
- (void)checkJSBridgeObjects:(BOOL)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(int)arg3 isMainFrame:(BOOL)arg4;
- (id)getPreInjectScriptStr;
- (void)goToURL:(id)arg1;
- (void)stop;
- (void)reload;
- (void)viewDidLayoutSubviews;
- (void)presentViewController:(id)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)viewDidPresent:(id)arg1 animated:(BOOL)arg2;
- (void)willDismissAndShow;
- (void)viewWillBeDismissed:(BOOL)arg1;
- (void)viewDidBeDismissed:(BOOL)arg1;
- (void)viewDidBePoped:(BOOL)arg1;
- (void)onWebViewLeave;
- (void)viewWillBePoped:(BOOL)arg1;
- (void)viewDidPush:(BOOL)arg1;
- (void)viewDidBePushed:(BOOL)arg1;
- (void)viewWillBePushed:(BOOL)arg1;
- (void)viewWillPop:(BOOL)arg1;
- (void)viewWillPush:(BOOL)arg1;
- (void)willDisappear;
- (void)didAppear;
- (void)willAppear;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (BOOL)useBlackStatusbar;
- (BOOL)useTransparentNavibar;
- (void)onLongPressOnWebview:(id)arg1;
- (void)enableLongPressDetect;
- (BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)adjustSubviewRects;
- (void)statusBarFrameWillChange:(id)arg1;
- (void)realTriggerPageReload;
- (void)onWebViewReadyToTerminate;
- (void)terminateManually;
- (void)pageReloadByManuallyTerminateWithRouteInfo:(id)arg1;
- (void)pageReloadWithRouteInfo:(id)arg1;
- (void)recoverWebView;
- (void)initWebViewIfNeeded;
- (void)internalInitWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)supplyAppInfoWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (id)initForPreloadAppTask;
- (id)initWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (void)dealloc;
- (void)setPrivacySubTitleIfNeed;
- (void)setBackgroundColor;
- (void)notifyToJSBridgeVisibilityChanged:(BOOL)arg1;
- (id)taskExtInfo;
- (id)extraInfo;
- (void)printConsoleLog:(id)arg1;
- (void)sendEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)publishEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)doJsApiInitEvent;
- (void)setCurrentUrl:(id)arg1;
- (id)getCurrentUrl;
- (int)webviewContentMode;
- (BOOL)isNeedShowReturnItem;
- (void)onRouteToHome;
- (void)onKill;
- (void)onAllExit;
- (void)OnReturn;
- (void)doBackActionCleanWithType;
- (void)DismissMyWebViewAnimated:(BOOL)arg1;
- (BOOL)isWeAppUseModule;
- (id)getSessionID;
- (id)getPackageConfig;
- (id)getCurrentContact;
- (id)getCurrentUserName;
- (BOOL)isViewDidAppear;
- (BOOL)isAlreadyViewWillAppear;
- (id)getPresentingWebVC;
- (BOOL)isFirstPage;
- (BOOL)isLastWebVC;
- (BOOL)isChildTabVC;
- (BOOL)isTabWebVC;
- (BOOL)isThisPageUsePreload;
- (BOOL)isOpenAtSubPage;
- (unsigned int)debugMode;
- (BOOL)isDebugMode;
- (BOOL)isAppLaunchFirstWebview;
- (unsigned long)getAppType;
- (id)getInitUrl;
- (int)getCurrentVersionNum;
- (id)getCurrentAppId;
- (void)setTitle:(id)arg1;
- (id)__privateTabbarInstance;
- (float)getWebViewWindowHeight;
- (void)fsmenu_calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(float *)arg2 height:(float *)arg3;
- (void)normal_calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(float *)arg2 height:(float *)arg3;
- (void)calcCurrentWebViewInset:(struct UIEdgeInsets *)arg1 y:(float *)arg2 height:(float *)arg3;
- (void)calcCurrentWebViewY:(float *)arg1 height:(float *)arg2;
- (void)resetWebviewInsetOrY;
- (void)setContentNavMode:(int)arg1;
- (BOOL)createLoadSubPackageTask:(id)arg1 completeHandler:(CDUnknownBlockType)arg2 progressHandler:(CDUnknownBlockType)arg3;
- (void)changeNavigationBarTitle:(id)arg1;
- (void)onLoadModuleData:(BOOL)arg1 errorCode:(int)arg2 moduleName:(id)arg3;
- (void)checkModuleDataLoaded;
- (id)getFileData:(id)arg1;
- (void)getFileData:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)filterRegularString:(id)arg1;
- (void)parseDataString:(id)arg1 AndGetStype:(id *)arg2 body:(id *)arg3 script:(id *)arg4;
- (id)elementStringFromXML:(id)arg1 startPos:(unsigned int *)arg2 elementName:(id)arg3 containElementName:(BOOL)arg4;
- (id)cachedDataWithURL:(id)arg1;
- (void)loadFrameContent:(id)arg1;
- (void)setLoadPageIndexStartTime:(long long)arg1;
- (long long)getLoadPageIndexStartTime;
- (void)loadModuleScriptDataWithFilePath:(id)arg1;
- (id)allElementStringFromHtml:(id)arg1 elementName:(id)arg2 containElementName:(BOOL)arg3;
- (id)getPageFrameJSStr;
- (void)loadPageFrameJSOfPreload;
- (void)tryLoadPreloadAppTaskIndexData;
- (void)injectWebViewConfigForPreload;
- (void)loadPreloadAppTaskFrameData;
- (void)loadIndexData;
- (id)getFrameContentWithURL:(id)arg1;
- (void)loadFrameDataWithBaseURL:(id)arg1 pageRelativeURL:(id)arg2;
- (void)bringTabBarToFront;
- (void)setPageTabAttribute;
- (void)loadPreloadTabAttribute;
- (void)setNavigationBarTitle:(id)arg1 backgroundColor:(id)arg2 alpha:(float)arg3;
- (void)setPageBackgroundColor;
- (void)updateNavigationBarItemsAndStatusBarStyle;
- (void)setNavigationAttributeFromChildWebView:(id)arg1;
- (id)pageAttribute;
- (void)setPreloadPageAttribute;
- (void)resetPreloadPageAttributeMark;
- (void)loadPreloadPageAttribute;
- (void)setupAttributeWhenKnowsPagePath;
- (void)onCallbackInitReady;
- (void)loadIndexDataWithRelativeURL:(id)arg1;
- (BOOL)isIndexDataLoaded;
- (id)getPreloadIndexURL;
- (id)getPreloadPageQuery;
- (id)getPreloadPageRelativeURL;
- (id)getPreloadBaseURL;
- (id)preloadFrameFileName;
- (id)getPresentContact;
- (BOOL)canShowCommentMenuItem;
- (BOOL)canShowShareMenuItem;
- (id)pluginNavBar;
- (id)pluginVideoPlayer;
- (id)pluginKeyboard;
- (id)pluginAppMsg;
- (id)pluginReportPageEvent;
- (void)onClickTipsBtn:(id)arg1 Index:(int)arg2 tipTag:(int)arg3;
- (void)showTipsViewWithTitle:(id)arg1 content:(id)arg2 tipsTag:(int)arg3 delegate:(id)arg4;
- (id)getCurrentViewController;
- (void)enterTempSessionWithSessionFrom:(id)arg1 appid:(id)arg2 businessUserName:(id)arg3 sendMsgInfo:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)shareWithGroup;
- (void)shareWebViewPage;
- (void)commonShare;
- (void)addToHomeScreen;
- (void)onLeaveBackChatState;
- (void)onOpenComment;
- (void)onBackToChat;
- (void)onOpenBrandProfileWebView;
- (void)onClosePerformance;
- (void)onOpenPerformance;
- (void)onOpenBrandProfile;
- (void)onCloseVConsole;
- (void)onOpenVConsole;
- (void)onWAActionSheetDidDismiss;
- (void)onWAActionSheetWillDismiss;
- (void)onWAActionSheetDestruct;
- (void)onWAActionSheetInfoClicked;
- (void)onWAActionSheetClickButtonWithButtonTitle:(id)arg1;
- (id)menuDebugButtonTitleArray;
- (id)menubuttonTitleArray;
- (id)takeCurrentSnapshot;
- (BOOL)isMenuVisible;
- (void)onMenuShow;
- (id)processWebViewSceenShot2ThumbImage:(id)arg1;
- (void)snapShotWebviewImageAtTop:(CDUnknownBlockType)arg1;
- (id)snapShotWebviewImage;
- (BOOL)onPopBackInteractiveRecognizeEdgeGesture;
- (void)onPopBackInteractiveTransitionEnd:(id)arg1 isComplete:(BOOL)arg2;
- (void)onPopBackInteractiveTransitionBegin:(id)arg1;
- (id)mmNavigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(int)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)removePopBackInteractivePopGesture;
- (void)addPopBackInteractivePopGesture;
- (void)onWeAppDismissTransitionEnd:(BOOL)arg1;
- (id)currentPopInteractiveTransiton;
- (void)resetLoadingLayer;
- (void)dismissLoadingLayer;
- (void)showLoadingLayerWhenPushed;
- (void)onWebviewToastDidDismiss;
- (void)showJSApiForbbiddenToast:(id)arg1;
- (BOOL)isWebviewPresenting;
- (void)onWebViewMenuLongPressMore;
- (void)onWebViewMenuReturn;
- (void)onWebViewMenuAllExit;
- (void)onWebViewMenuMore;
- (struct CGRect)currentMenuViewFrame;
- (void)setNavigationBarHidden:(BOOL)arg1;
- (void)setStatusBarHidden:(BOOL)arg1;
- (id)getTabSelectedWebView;
- (void)onWAWebErrorViewOperateBtnClick:(id)arg1;
- (void)show404ErrorView;
- (void)show404ErrorWaittingView;
- (void)showErrorViewWithMessage:(id)arg1;
- (void)addBackInfoViewIndicator:(id)arg1;
- (id)getBackInfoViewWithAppId:(id)arg1 enablePullRefresh:(BOOL)arg2;
- (void)popToFirstWebViewInStackWithAnimated:(BOOL)arg1;
- (unsigned int)getWebViewDepthInStack;
- (id)getFirstWebViewInStack;
- (BOOL)isCreatingChildOrSiblingTab;
- (BOOL)isChildTabSelected;
- (void)tabBarDidSwitchTab;
- (id)getChildTabWebViews;
- (id)getTabChildWebViewWithRelativeURL:(id)arg1;
- (id)getParentTabViewController;
- (void)setTailBackGroundColor:(id)arg1;
- (void)setWebViewTopViewColor:(id)arg1;
- (void)setWebViewBackgroundColor:(id)arg1;
- (BOOL)getFullScreen;
- (void)setFullScreen:(BOOL)arg1;
- (void)disableFullScreen;
- (void)enableFullScreen;
- (void)setCustomNavBarOffset:(float)arg1;
- (float)getCustomNavBarOffset;
- (void)setNavLoading:(BOOL)arg1;
- (void)setNavRightButtonHidden:(BOOL)arg1;
- (void)setNavTitle:(id)arg1;
- (void)setNavBarElementAndStatusBarStyle:(int)arg1;
- (void)changeStatusBarWhite:(BOOL)arg1;
- (void)setNavBarBgColor:(id)arg1;
- (void)setNavMenuState:(int)arg1;
- (void)updateNavView;
- (id)currentNavMenuView;
- (void)resetNavView;
- (id)title;
- (void)uiLayoutSubView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly, nonatomic) NSURLRequest *request;
@property(readonly) Class superclass;

@end

