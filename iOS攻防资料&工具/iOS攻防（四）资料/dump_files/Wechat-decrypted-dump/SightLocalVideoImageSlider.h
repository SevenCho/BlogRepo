//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "SightLocalViewSliderMaskViewDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"
#import "UICollectionViewDelegateFlowLayout.h"
#import "UIScrollViewDelegate.h"

@class AVAsset, AVAssetImageGenerator, NSIndexPath, NSMutableArray, NSMutableDictionary, NSString, SightLocalViewSliderMaskView, UICollectionView;

@interface SightLocalVideoImageSlider : UIView <UIScrollViewDelegate, SightLocalViewSliderMaskViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    struct CGRect _normalModeFrame;
    BOOL _isSystemCrop;
    BOOL _isCropAllowEnlarge;
    BOOL _isLargeMode;
    BOOL _isLargeAnimationBegin;
    id <SightLocalVideoImageSliderDelegate> _delegate;
    float _playRate;
    AVAsset *_asset;
    UICollectionView *_thumbImagesCollectionView;
    float _widthOfImage;
    float _usrDefOutputDuration;
    float _currentRateOfImage;
    float _outputDuration;
    float _totalDuration;
    float _numberOfImagesPerSecond;
    float _lastContentOffset;
    unsigned int _currentScrollDirection;
    AVAssetImageGenerator *_imageGenerator;
    NSMutableDictionary *_thumbImageDictionary;
    NSMutableArray *_totalTimeList;
    NSMutableArray *_largeModeTimeListOnShow;
    SightLocalViewSliderMaskView *_maskView;
    float _lastStartTime;
    float _lastEndTime;
    NSIndexPath *_enlargeCellIndex;
}

@property(nonatomic) NSIndexPath *enlargeCellIndex; // @synthesize enlargeCellIndex=_enlargeCellIndex;
@property(nonatomic) BOOL isLargeAnimationBegin; // @synthesize isLargeAnimationBegin=_isLargeAnimationBegin;
@property(nonatomic) BOOL isLargeMode; // @synthesize isLargeMode=_isLargeMode;
@property(nonatomic) float lastEndTime; // @synthesize lastEndTime=_lastEndTime;
@property(nonatomic) float lastStartTime; // @synthesize lastStartTime=_lastStartTime;
@property(retain, nonatomic) SightLocalViewSliderMaskView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) NSMutableArray *largeModeTimeListOnShow; // @synthesize largeModeTimeListOnShow=_largeModeTimeListOnShow;
@property(retain, nonatomic) NSMutableArray *totalTimeList; // @synthesize totalTimeList=_totalTimeList;
@property(retain, nonatomic) NSMutableDictionary *thumbImageDictionary; // @synthesize thumbImageDictionary=_thumbImageDictionary;
@property(retain, nonatomic) AVAssetImageGenerator *imageGenerator; // @synthesize imageGenerator=_imageGenerator;
@property(nonatomic) unsigned int currentScrollDirection; // @synthesize currentScrollDirection=_currentScrollDirection;
@property(nonatomic) float lastContentOffset; // @synthesize lastContentOffset=_lastContentOffset;
@property(nonatomic) float numberOfImagesPerSecond; // @synthesize numberOfImagesPerSecond=_numberOfImagesPerSecond;
@property(nonatomic) float totalDuration; // @synthesize totalDuration=_totalDuration;
@property(nonatomic) float outputDuration; // @synthesize outputDuration=_outputDuration;
@property(nonatomic) float currentRateOfImage; // @synthesize currentRateOfImage=_currentRateOfImage;
@property(nonatomic) BOOL isCropAllowEnlarge; // @synthesize isCropAllowEnlarge=_isCropAllowEnlarge;
@property(nonatomic) BOOL isSystemCrop; // @synthesize isSystemCrop=_isSystemCrop;
@property(nonatomic) float usrDefOutputDuration; // @synthesize usrDefOutputDuration=_usrDefOutputDuration;
@property(nonatomic) float widthOfImage; // @synthesize widthOfImage=_widthOfImage;
@property(retain, nonatomic) UICollectionView *thumbImagesCollectionView; // @synthesize thumbImagesCollectionView=_thumbImagesCollectionView;
@property(retain, nonatomic) AVAsset *asset; // @synthesize asset=_asset;
@property(nonatomic) float playRate; // @synthesize playRate=_playRate;
@property(nonatomic) __weak id <SightLocalVideoImageSliderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (BOOL)queryIsCropAllowEnlarge;
- (BOOL)queryIsSystemCrop;
- (void)shouldSwitchToLargeMode:(BOOL)arg1;
- (void)thumbImagesCollectionViewContentInsetNeedChange;
- (void)sightLocalViewSliderMaskView:(id)arg1 didStopMovingAtPosition:(float)arg2 isStartFlag:(BOOL)arg3;
- (void)sightLocalViewSliderMaskViewPlayFlagDidChange:(id)arg1;
- (float)positionOfTime:(double)arg1;
- (double)timeOfPosition:(float)arg1;
- (void)stopPlayFlag;
- (void)startPlayFlagAtTime:(double)arg1;
- (double)timeOfEndFlag;
- (double)timeOfStartFlag;
- (void)endOfMaskDidMoveToTime:(double)arg1;
- (void)playFlagOfMaskDidMoveToTime:(double)arg1;
- (void)startOfMaskDidMoveToTime:(double)arg1;
- (void)didStopScrolling;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (BOOL)isEnlargedCell:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (int)numberOfSectionsInCollectionView:(id)arg1;
- (void)cancelAllImageGeneration;
- (void)loadMoreImagesFromIndexPath:(id)arg1 withSrollDirection:(unsigned int)arg2;
- (void)loadMoreImages;
- (void)setStartFlagTime:(double)arg1 andEndFlagTime:(double)arg2;
- (void)loadSingleImageAtIndexPath:(id)arg1 needFakeResultImmediately:(BOOL)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)loadSingleImageForCell:(id)arg1 atIndexPath:(id)arg2;
- (CDStruct_1b6d18a9)timeStampAtIndex:(int)arg1;
- (id)visibleIndexPathAtTime:(CDStruct_1b6d18a9)arg1;
- (id)timeValueForThumbAtRowIndex:(int)arg1;
- (struct CGRect)validFrameOfMaskView;
- (id)initWithFrame:(struct CGRect)arg1 withSystemCrop:(BOOL)arg2 withCropAllowEnlarge:(BOOL)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

