//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "GPUImageOutput.h"

#import "AVCaptureAudioDataOutputSampleBufferDelegate.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"

@class AVCaptureAudioDataOutput, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureSession, AVCaptureVideoDataOutput, GLProgram, NSDate, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSString;

@interface GPUImageVideoCamera : GPUImageOutput <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate>
{
    unsigned int numberOfFramesCaptured;
    float totalFrameTimeDuringCapture;
    AVCaptureSession *_captureSession;
    AVCaptureDevice *_inputCamera;
    AVCaptureDevice *_microphone;
    AVCaptureDeviceInput *videoInput;
    AVCaptureVideoDataOutput *videoOutput;
    BOOL capturePaused;
    unsigned int outputRotation;
    unsigned int internalRotation;
    NSObject<OS_dispatch_semaphore> *frameRenderingSemaphore;
    BOOL captureAsYUV;
    unsigned int luminanceTexture;
    unsigned int chrominanceTexture;
    id <GPUImageVideoCameraDelegate> _delegate;
    AVCaptureDeviceInput *audioInput;
    AVCaptureAudioDataOutput *audioOutput;
    NSDate *startingCaptureTime;
    NSObject<OS_dispatch_queue> *cameraProcessingQueue;
    NSObject<OS_dispatch_queue> *audioProcessingQueue;
    GLProgram *yuvConversionProgram;
    int yuvConversionPositionAttribute;
    int yuvConversionTextureCoordinateAttribute;
    int yuvConversionLuminanceTextureUniform;
    int yuvConversionChrominanceTextureUniform;
    int yuvConversionMatrixUniform;
    const float *_preferredConversion;
    BOOL isFullYUVRange;
    int imageBufferWidth;
    int imageBufferHeight;
    BOOL addedAudioInputsDueToEncodingTarget;
    BOOL _runBenchmark;
    BOOL _horizontallyMirrorFrontFacingCamera;
    BOOL _horizontallyMirrorRearFacingCamera;
    NSString *_captureSessionPreset;
    int _outputImageOrientation;
    int _frameRate;
    int _preferredVideoStabilizationMode;
    int _exposureTime;
    float _cameraISO;
    struct CGPoint _focusPoint;
    struct CGPoint _exposurePoint;
}

+ (BOOL)isFrontFacingCameraPresent;
+ (BOOL)isBackFacingCameraPresent;
@property(nonatomic) float cameraISO; // @synthesize cameraISO=_cameraISO;
@property(nonatomic) int exposureTime; // @synthesize exposureTime=_exposureTime;
@property(nonatomic) struct CGPoint exposurePoint; // @synthesize exposurePoint=_exposurePoint;
@property(nonatomic) struct CGPoint focusPoint; // @synthesize focusPoint=_focusPoint;
@property(nonatomic) int preferredVideoStabilizationMode; // @synthesize preferredVideoStabilizationMode=_preferredVideoStabilizationMode;
@property(nonatomic) BOOL horizontallyMirrorRearFacingCamera; // @synthesize horizontallyMirrorRearFacingCamera=_horizontallyMirrorRearFacingCamera;
@property(nonatomic) BOOL horizontallyMirrorFrontFacingCamera; // @synthesize horizontallyMirrorFrontFacingCamera=_horizontallyMirrorFrontFacingCamera;
@property(nonatomic) id <GPUImageVideoCameraDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int outputImageOrientation; // @synthesize outputImageOrientation=_outputImageOrientation;
@property(nonatomic) BOOL runBenchmark; // @synthesize runBenchmark=_runBenchmark;
@property(readonly) AVCaptureDevice *inputCamera; // @synthesize inputCamera=_inputCamera;
@property(readonly, retain, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(copy, nonatomic) NSString *captureSessionPreset; // @synthesize captureSessionPreset=_captureSessionPreset;
- (void).cxx_destruct;
@property(nonatomic) float zoomScale;
- (void)updateOrientationSendToTargets;
- (void)setAudioEncodingTarget:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)resetBenchmarkAverage;
- (float)averageFrameDurationDuringCapture;
- (void)convertYUVToRGBOutput;
- (void)processAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)processVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)updateTargetsForVideoCameraUsingCacheTextureAtWidth:(int)arg1 height:(int)arg2 time:(CDStruct_1b6d18a9)arg3;
- (BOOL)tryToSetConnectionPreferredVideoStabilizationMode:(int)arg1;
- (id)videoCaptureConnection;
@property int frameRate; // @synthesize frameRate=_frameRate;
@property(readonly, getter=isFrontFacingCameraPresent) BOOL frontFacingCameraPresent;
@property(readonly, getter=isBackFacingCameraPresent) BOOL backFacingCameraPresent;
- (int)cameraPosition;
- (void)rotateCamera;
- (void)resumeCameraCapture;
- (void)pauseCameraCapture;
- (void)stopCameraCapture;
- (void)startCameraCapture;
@property(readonly, nonatomic) BOOL isRunning;
- (void)addTarget:(id)arg1 atTextureLocation:(int)arg2;
- (void)removeInputsAndOutputs;
- (BOOL)removeAudioInputsAndOutputs;
- (BOOL)addAudioInputsAndOutputs;
- (void)dealloc;
- (id)framebufferForOutput;
- (id)initWithSessionPreset:(id)arg1 cameraPosition:(int)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

