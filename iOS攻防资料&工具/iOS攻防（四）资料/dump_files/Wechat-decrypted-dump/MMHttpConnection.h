//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMObject.h"

@class MMTimer, NSMutableData, NSString, NSURLConnection;

@interface MMHttpConnection : MMObject
{
    unsigned long mStatusCode;
    NSString *m_nsFileName;
    MMTimer *m_tmCheckTimeOut;
    unsigned long m_uiHttpType;
    NSString *m_nsNotifyKey;
    unsigned long m_uiContentLen;
    id <MMHttpConnectionDelegate><NSObject> mDelegate;
    BOOL m_bGZip;
    BOOL isWebp;
    NSURLConnection *mUrlConn;
    NSMutableData *mRecvData;
    NSString *mCacheKey;
    unsigned long mConnProto;
    float timeInterval;
}

@property(nonatomic) float timeInterval; // @synthesize timeInterval;
@property(nonatomic) BOOL isWebp; // @synthesize isWebp;
@property(retain, nonatomic) NSString *m_nsNotifyKey; // @synthesize m_nsNotifyKey;
@property(nonatomic) unsigned long m_uiHttpType; // @synthesize m_uiHttpType;
@property(retain, nonatomic) MMTimer *m_tmCheckTimeOut; // @synthesize m_tmCheckTimeOut;
@property(retain, nonatomic) NSString *m_nsFileName; // @synthesize m_nsFileName;
@property(nonatomic) unsigned long mConnProto; // @synthesize mConnProto;
@property(retain, nonatomic) NSString *mCacheKey; // @synthesize mCacheKey;
@property(retain, nonatomic) NSMutableData *mRecvData; // @synthesize mRecvData;
@property(retain, nonatomic) NSURLConnection *mUrlConn; // @synthesize mUrlConn;
- (void).cxx_destruct;
- (void)TimeOut;
- (void)cancelRequest;
- (BOOL)spostWithURL:(id)arg1 body:(id)arg2 boundary:(id)arg3;
- (BOOL)sgetWithURL:(id)arg1;
- (BOOL)getWithURL:(id)arg1 andRefererHeader:(id)arg2;
- (BOOL)getWithURL:(id)arg1;
- (void)dealloc;
- (void)CancelTimer;
- (id)initWithProtocol:(unsigned long)arg1 andDelegate:(id)arg2;
- (BOOL)connectWithRequest:(id)arg1;
- (BOOL)setPostRequestHeader:(id)arg1 boundary:(id)arg2;
- (BOOL)setNormalRequestHeader:(id)arg1;
- (void)saveRawDataIfNeeded:(id)arg1 fileName:(id)arg2;
- (void)handleMd5WithRaw:(id)arg1 urlStr:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;

@end

